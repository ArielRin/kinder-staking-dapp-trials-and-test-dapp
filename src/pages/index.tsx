import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import { useState } from "react";
import { useContractWrite } from "wagmi";
import contractABI from './stakeABI.json'; // Importing the ABI

const contractAddress = "0x18Ed09D95dc7E670Eb917de97127445Cd7832Ed6";

export default function Home() {
    const [amount, setAmount] = useState(0);
    const [isNetworkSwitchHighlighted, setIsNetworkSwitchHighlighted] = useState(false);
    const [isConnectHighlighted, setIsConnectHighlighted] = useState(false);

    const closeAll = () => {
        setIsNetworkSwitchHighlighted(false);
        setIsConnectHighlighted(false);
    };

    // Wagmi Contract Write Hooks
    // ... (same as previous example)

    return (
        <>
            <Head>
                <title>Kinder trialStaking | Next Starter Template</title>
                <meta name="description" content="Generated by create-wc-dapp" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
						<header>
							<div
								className={styles.backdrop}
								style={{
									opacity:
										isConnectHighlighted || isNetworkSwitchHighlighted
											? 1
											: 0,
								}}
							/>
							<div className={styles.header}>
								<div className={styles.logo}>
									<Image
										src="/logo.svg"
										alt="WalletConnect Logo"
										height="32"
										width="203"
									/>
								</div>
								<div className={styles.buttons}>
									<div
										onClick={closeAll}
										className={`${styles.highlight} ${
											isNetworkSwitchHighlighted
												? styles.highlightSelected
												: ``
										}`}
									>
										<w3m-network-button />
									</div>
									<div
										onClick={closeAll}
										className={`${styles.highlight} ${
											isConnectHighlighted
												? styles.highlightSelected
												: ``
										}`}
									>
										<w3m-button />
									</div>
								</div>
							</div>
						</header>
            <main className={styles.main}>
                <div className={styles.wrapper}>
                    <div className={styles.container}>
                        <h1>Kinderinu staking tests</h1>
                        <div className={styles.content}>
                            {/* Staking Interface */}
                            <input
                                type="number"
                                value={amount}
                                onChange={(e) => setAmount(e.target.value)}
                                placeholder="Amount"
                            />
                            <button onClick={() => deposit()}>Deposit</button>
                            <button onClick={() => claim()}>Claim Rewards</button>
                            <button onClick={() => withdraw()}>Withdraw</button>
                            <button onClick={() => withdrawAll()}>Withdraw All</button>
                        </div>
                    </div>
                    {/* ... (remaining existing content) */}
                </div>
            </main>
        </>
    );
}
